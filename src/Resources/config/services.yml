parameters:
  env(thrift_host): localhost
  env(thrift_port): 6831
  env(thrift_buffer_size): 16384
  env(opentrace_sampler_rate): 0.1
  env(jaeger_context_format): 'text'
  env(jaeger_context_env): 'OPENTRACING_CTX'
  env(jaeger_context_header): 'opentracing-ctx'
services:
  ds.stack:
    class: Ds\Stack
    shared: false
  id.generator.random:
    class: CodeTool\OpenTracing\Id\RandomIntGenerator
  id.generator.span: '@id.generator.random'
  jaeger.codec.text:
    class: CodeTool\OpenTracing\Codec\TextCodec
    tags:
      - {name: 'jaeger.codec', alias: 'text'}
  jaeger.codec.registry:
    class: CodeTool\OpenTracing\Codec\CodecRegistry
  opentracing.sampler.always:
    class: CodeTool\OpenTracing\Sampler\ConstSampler
    arguments: [true]
  opentracing.sampler.const:
    class: CodeTool\OpenTracing\Sampler\ConstSampler
    arguments: ['%kernel.debug%']
  opentracing.sampler.probabilistic:
    class: CodeTool\OpenTracing\Sampler\ProbabilisticSampler
    arguments: ['%env(opentrace_sampler_rate)%']
  opentracing.sampler: '@opentracing.sampler.probabilistic'
  opentracing.span.factory:
    class: CodeTool\OpenTracing\Span\Factory\SpanFactory
    arguments: ['@id.generator.span', '@opentracing.sampler']
  client.thrift:
    class: CodeTool\OpenTracing\Client\ThriftClient
    arguments: ['%service_name%', '@thrift.agent']
  thrift.agent:
    class: CodeTool\OpenTracing\Jaeger\Thrift\Agent\AgentClient
    arguments: ['@thrift.protocol']
  thrift.protocol.compact:
    class: Thrift\Protocol\TCompactProtocol
    arguments: ['@thrift.transport']
  thrift.protocol.binary:
    class: Thrift\Protocol\TBinaryProtocol
    arguments: ['@thrift.transport']
  thrift.protocol: '@thrift.protocol.compact'
  thrift.transport.udp:
    class: CodeTool\OpenTracing\Transport\TUDPTransport
    arguments: ['%env(thrift_host)%', '%env(thrift_port)%']
  thrift.transport.buffered:
    class: Thrift\Transport\TBufferedTransport
    arguments: ['@thrift.transport.udp', '%env(thrift_buffer_size)%', '%env(thrift_buffer_size)%']
    calls:
      -
        method: open
        arguments: []
  thrift.transport: '@thrift.transport.buffered'
  opentracing.tracer:
    class: CodeTool\OpenTracing\Tracer\Tracer
    arguments: ['@ds.stack', '@opentracing.span.factory', '@client.thrift']
  opentracing.context.injector:
    class: CodeTool\Opentracing\Symfony\Bridge\ContextInjector
    arguments:
      - '@opentracing.tracer'
      - '@jaeger.codec.registry'
      - '@request_stack'
      - '%env(jaeger_context_format)%'
      - '%env(jaeger_context_env)%'
      - '%env(jaeger_context_header)%'
    tags:
      - {name: 'kernel.event_subscriber' }
  symfony.opentracing.tracer.bridge:
    class: CodeTool\Opentracing\Symfony\Bridge\TracerBridge
    arguments: ['@opentracing.tracer']
    tags:
      - {name: 'kernel.event_subscriber' }
