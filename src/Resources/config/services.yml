parameters:
  env(JAEGER_HOST): localhost
  env(JAEGER_PORT): 6831
  env(JAEGER_BUFFER_SIZE): 16384
  env(OPENTRACE_SAMPLER_RATE): 0.001
  env(JAEGER_CONTEXT_FORMAT): 'text'
  env(JAEGER_CONTEXT_ENV): 'UBER_TRACE_ID'
  env(JAEGER_CONTEXT_HEADER): 'uber-trace-id'
  service_name: app
services:
  spl.stack:
    class: SplStack
    shared: false
  id.generator.random:
    class: Jaeger\Id\RandomIntGenerator
  id.generator.span: '@id.generator.random'
  jaeger.codec.text:
    class: Jaeger\Codec\TextCodec
    tags:
      - {name: 'jaeger.codec', alias: 'text'}
  jaeger.codec.registry:
    class: Jaeger\Codec\CodecRegistry
    calls:
      -
        method: offsetSet
        arguments: ['text', '@jaeger.codec.text']
  jaeger.sampler.always:
    class: Jaeger\Sampler\ConstSampler
    arguments: [true]
  jaeger.sampler.const:
    class: Jaeger\Sampler\ConstSampler
    arguments: ['%kernel.debug%']
  jaeger.sampler.probabilistic:
    class: Jaeger\Sampler\ProbabilisticSampler
    arguments: ['%env(OPENTRACE_SAMPLER_RATE)%']
  jaeger.sampler: '@jaeger.sampler.probabilistic'
  jaeger.span.factory:
    class: Jaeger\Span\Factory\SpanFactory
    arguments: ['@id.generator.span', '@jaeger.sampler']
  client.thrift:
    class: Jaeger\Client\ThriftClient
    arguments: ['%service_name%', '@thrift.agent']
  thrift.agent:
    class: Jaeger\Thrift\Agent\AgentClient
    arguments: ['@thrift.protocol']
  thrift.protocol.compact:
    class: Thrift\Protocol\TCompactProtocol
    arguments: ['@thrift.transport']
  thrift.protocol.binary:
    class: Thrift\Protocol\TBinaryProtocol
    arguments: ['@thrift.transport']
  thrift.protocol: '@thrift.protocol.compact'
  thrift.transport.udp:
    class: Jaeger\Transport\TUDPTransport
    arguments: ['%env(JAEGER_HOST)%', '%env(JAEGER_PORT)%']
  thrift.transport.buffered:
    class: Thrift\Transport\TBufferedTransport
    arguments: ['@thrift.transport.udp', '%env(JAEGER_BUFFER_SIZE)%', '%env(JAEGER_BUFFER_SIZE)%']
    calls:
      -
        method: open
        arguments: []
  thrift.transport: '@thrift.transport.buffered'
  jaeger.tracer:
    class: Jaeger\Tracer\Tracer
    arguments: ['@spl.stack', '@jaeger.span.factory', '@client.thrift']
  jaeger.context.injector:
    class: Jaeger\Symfony\Bridge\ContextInjector
    arguments:
      - '@spl.stack'
      - '@jaeger.tracer'
      - '@jaeger.tracer'
      - '@jaeger.codec.registry'
      - '@request_stack'
      - '@router'
      - '%env(JAEGER_CONTEXT_FORMAT)%'
      - '%env(JAEGER_CONTEXT_ENV)%'
      - '%env(JAEGER_CONTEXT_HEADER)%'
    tags:
      - {name: 'kernel.event_subscriber' }
  symfony.jaeger.tracer.bridge:
    class: Jaeger\Symfony\Bridge\TracerBridge
    arguments: ['@jaeger.tracer']
    tags:
      - {name: 'kernel.event_subscriber' }
